{"version":3,"sources":["features/car/carSlice.js","components/Header.js","components/Section.js","components/Home.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["carSlice","createSlice","name","initialState","cars","reducers","selectCars","state","car","Header","useState","burgerStatus","setBurgerStatus","useSelector","Container","src","map","index","href","RightMenu","CustomMenu","onClick","BurgerNav","show","CloseWrapper","CustomClose","styled","div","ClearIcon","props","MenuIcon","Menu","Section","title","description","backgroundImg","leftBtnText","rightBtnText","Wrap","bgImage","ItemText","Buttons","ButtonGroup","LeftButton","RightButton","DownArrow","img","Home","App","className","store","configureStore","reducer","carReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a76c4777.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = { \r\n    cars : [ \"Model S\" , \"Model 3\" , \"Model X\" , \"Model Y\"]\r\n}\r\n\r\nconst carSlice = createSlice({\r\n    name : \"car\" ,\r\n    initialState : initialState ,\r\n    reducers : {}\r\n})\r\n\r\nexport const selectCars = state => state.car.cars\r\n\r\nexport default carSlice.reducer","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport { selectCars } from '../features/car/carSlice'\r\nimport { useSelector } from 'react-redux'\r\n\r\nfunction Header() {\r\n\r\n    const [ burgerStatus , setBurgerStatus ] = useState(false)\r\n    const cars = useSelector(selectCars)\r\n\r\n    return (\r\n        <Container>\r\n            <a>\r\n                <img src=\"/images/logo.svg\" />\r\n            </a>\r\n\r\n            <Menu>\r\n                {\r\n                    cars && cars.map((car , index) => (\r\n                        <a href=\"#\" key={index}>{car}</a>\r\n                    ))\r\n                }\r\n            </Menu>\r\n\r\n            <RightMenu>\r\n                <a>Shop</a>\r\n                <a>Tesla account</a>\r\n                <CustomMenu onClick = {() => setBurgerStatus(true)} />\r\n            </RightMenu>\r\n\r\n            <BurgerNav show = {burgerStatus} >\r\n                <CloseWrapper>\r\n                    <CustomClose onClick={() => setBurgerStatus(false)} />\r\n                </CloseWrapper>\r\n                {\r\n                    cars && cars.map((car , index) => (\r\n                        <li key={index}><a href=\"#\">{car}</a></li>\r\n                    ))\r\n                }\r\n                <li><a>Existing Inventory</a></li>\r\n                <li><a>Used Inventory</a></li>\r\n                <li><a>Trade-in</a></li>\r\n                <li><a>Cybertruck</a></li>\r\n                <li><a>Roadaster</a></li>\r\n            </BurgerNav>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\nconst CloseWrapper = styled.div`\r\n    display : flex ;\r\n    justify-content : flex-end ;\r\n`\r\n\r\nconst CustomClose = styled(ClearIcon)`\r\n    cursor : pointer ;\r\n`\r\n\r\nconst BurgerNav = styled.div`\r\n    position : fixed ;\r\n    top : 0 ;\r\n    bottom : 0 ;\r\n    right : 0 ;\r\n    background-color : white ;\r\n    width : 300px ;\r\n    list-style : none ;\r\n    padding : 20px ;\r\n    display : flex ;\r\n    flex-direction : column ;\r\n    text-align : start ;\r\n    transform : ${props => props.show ? 'translateX(0)' : 'translateX(100%)'} ;\r\n    transition : transform 0.2s ease-in ;\r\n\r\n    li {\r\n        padding : 15px 0 ;\r\n        border-bottom : 1px solid rgba(0 , 0 , 0 , 0.2) ;\r\n\r\n        a {\r\n            font-weight : 600;\r\n        }\r\n    }\r\n`\r\n\r\nconst CustomMenu = styled(MenuIcon)`\r\n    cursor : pointer ;\r\n`\r\n\r\nconst RightMenu = styled.div`\r\n    display : flex ;\r\n    align-items : center ;\r\n\r\n    a {\r\n        font-weight : 600 ;\r\n        text-transform : uppercase ;\r\n        margin-right : 10px ;\r\n    }\r\n`\r\n\r\nconst Menu = styled.div`\r\n    display : flex ;\r\n    align-items : center ;\r\n    flex : 1 ;\r\n    justify-content : center ;\r\n\r\n    a {\r\n        font-weight : 600 ;\r\n        text-transform : uppercase ;\r\n        padding : 0 10px ;\r\n        \r\n    }\r\n\r\n    @media(max-width : 768px) {\r\n        display : none ;\r\n    }\r\n`\r\n\r\nconst Container = styled.div`\r\n    min-height : 60px ;\r\n    position : fixed ;\r\n    display : flex ;\r\n    align-items : center ;\r\n    justify-content : space-between ;\r\n    padding : 0 20px ;\r\n    top : 0 ;\r\n    left : 0 ;\r\n    right : 0 ;\r\n    z-index : 1 ;\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nfunction Section({ title, description, backgroundImg, leftBtnText, rightBtnText }) {\r\n    return (\r\n        <Wrap bgImage={backgroundImg} >\r\n            <ItemText>\r\n                <h1>{title}</h1>\r\n                <p>{description}</p>\r\n            </ItemText>\r\n\r\n            <Buttons>\r\n                <ButtonGroup>\r\n                    <LeftButton>\r\n                        {leftBtnText}\r\n                    </LeftButton>\r\n\r\n                    {\r\n                        rightBtnText && (<RightButton>\r\n                            {rightBtnText}\r\n                        </RightButton>)\r\n                    }\r\n\r\n                </ButtonGroup>\r\n\r\n                <DownArrow src=\"/images/down-arrow.svg\" />\r\n            </Buttons>\r\n\r\n        </Wrap>\r\n    )\r\n}\r\n\r\nexport default Section\r\n\r\nconst Buttons = styled.div``\r\n\r\nconst DownArrow = styled.img`\r\n    height : 40px ;\r\n    animation : animateDown infinite 1.5s; \r\n`\r\n\r\nconst ButtonGroup = styled.div`\r\n    display : flex ;\r\n    margin-bottom : 30px ;\r\n\r\n    @media (max-width : 768px) {\r\n        flex-direction : column ;\r\n    }\r\n`\r\n\r\nconst LeftButton = styled.div`\r\n    background-color : rgba(23 , 26 , 32 , 0.8) ;\r\n    height : 40px ;\r\n    width : 256px ;\r\n    color : white ;\r\n    display : flex ;\r\n    justify-content : center ;\r\n    align-items : center ;\r\n    border-radius : 100px ;\r\n    opacity : 0.85 ;\r\n    text-transform : uppercase ;\r\n    font-size : 12px ;\r\n    cursor : pointer ;\r\n    margin : 8px ;\r\n`\r\n\r\nconst RightButton = styled(LeftButton)`\r\n    background-color : white ;\r\n    opacity : 0.65 ;\r\n    color : black ;\r\n`\r\n\r\nconst ItemText = styled.div`\r\n    padding-top : 15vh ;\r\n    text-align : center ;\r\n`\r\n\r\nconst Wrap = styled.div`\r\n    width : 100vw ;\r\n    height : 100vh ;\r\n    background-size : cover ;\r\n    background-position : center ;\r\n    background-repeat : no-repeat ;\r\n    display : flex ;\r\n    flex-direction : column ;\r\n    justify-content : space-between ;\r\n    align-items : center ;\r\n    background-image : ${props => `url(\"images/${props.bgImage}\")`}\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Section from './Section'\r\n\r\nfunction Home() {\r\n    return (\r\n        <Container>\r\n            <Section\r\n                title=\"Model S\"\r\n                description=\"Order Online for Touchless Delivery\"\r\n                backgroundImg=\"model-s.jpg\"\r\n                leftBtnText=\"Custom order\"\r\n                rightBtnText=\"Existing inventory\"\r\n            />\r\n\r\n            <Section\r\n                title=\"Model Y\"\r\n                description=\"Order Online for Touchless Delivery\"\r\n                backgroundImg=\"model-y.jpg\"\r\n                leftBtnText=\"Custom order\"\r\n                rightBtnText=\"Existing inventory\"\r\n            />\r\n\r\n            <Section\r\n                title=\"Model 3\"\r\n                description=\"Order Online for Touchless Delivery\"\r\n                backgroundImg=\"model-3.jpg\"\r\n                leftBtnText=\"Custom order\"\r\n                rightBtnText=\"Existing inventory\"\r\n            />\r\n\r\n            <Section\r\n                title=\"Model X\"\r\n                description=\"Order Online for Touchless Delivery\"\r\n                backgroundImg=\"model-x.jpg\"\r\n                leftBtnText=\"Custom order\"\r\n                rightBtnText=\"Existing inventory\"\r\n            />\r\n\r\n            <Section\r\n                title=\"Lowest Cost Solar Panels in America\"\r\n                description=\"Money-back guarantee\"\r\n                backgroundImg=\"solar-panel.jpg\"\r\n                leftBtnText=\"order now\"\r\n                rightBtnText=\"learn more\"\r\n            />\r\n\r\n            <Section\r\n                title=\"Solar for New Roofs\"\r\n                description=\"Solar Roof Costs Less Than a New Roof Plus Solar Panels\"\r\n                backgroundImg=\"solar-roof.jpg\"\r\n                leftBtnText=\"order now\"\r\n                rightBtnText=\"learn more\"\r\n            />\r\n\r\n            <Section\r\n                title=\"Accessories\"\r\n                description=\"\"\r\n                backgroundImg=\"accessories.jpg\"\r\n                leftBtnText=\"shop now\"\r\n            />\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Home\r\n\r\nconst Container = styled.div`\r\n    height : 100vh ;\r\n`\r\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Home from './components/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport carReducer from '../features/car/carSlice'\n\nexport const store = configureStore({\n  reducer: {\n    car : carReducer\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}